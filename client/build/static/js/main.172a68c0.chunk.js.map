{"version":3,"sources":["axios.js","Components/login-button.js","Components/logout-button.js","Components/authentication-button.js","Components/auth-nav.js","Components/Loading.js","Components/Chat.js","Components/Sidebar.js","Components/StartChatModal.js","Components/signup-button.js","Components/Login.js","auth/protected-route.js","App.js","reportWebVitals.js","auth/auth0-provider-with-history.js","index.js"],"names":["instance","axios","create","base","LoginButton","loginWithRedirect","useAuth0","className","onClick","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","isAuthenticated","AuthNav","Loading","src","alt","withAuthenticationRequired","props","user","chatId","isLoading","currentChat","useState","endPicture","setEndPicture","endName","setEndName","endLastSeen","setEndLastSeen","messages","console","log","input","setInput","setCurrRecpt","isChatId","setIsChatId","useEffect","unlock","current","JSON","parse","localStorage","getItem","picture","setup","undefined","name","last_login","Avatar","IconButton","SearchOutlined","AttachFile","map","message","receivername","timestamp","_id","value","onChange","e","target","placeholder","type","preventDefault","chatid","specialkey","details","displayname","post","senderid","sub","sndrsdispname","nickname","receiverspic","pic","receiverdispname","chatSpecialKey","then","response","catch","err","alert","onRedirecting","Sidebar","setShow","chats","fetchChat","addNewChat","blockUser","chatRejuvinate","deleteNow","retrieveUsersChats","setChatid","currUserId","setCurrUserId","currUserName","setCurrUserName","currUserDisp","setCurrUserDisp","currUserMail","setCurrUserMail","setChatSpecialKey","currentUserPic","setCurrentUserPic","blockerId","setBlockerId","blockeeId","setBlockeeId","blockername","setBlockername","blockeename","setBlockeename","blockermail","setBlockermail","blockeemail","setBlockeemail","blockedSpecialKey","setBlockedSpecialKey","blockerDispName","setBlockerDispName","blockeeDispName","setBlockeeDispName","selectedId","setSelectedId","deleteClicked","setDeleteClicked","blockClicked","setBlockClicked","secureChatId","signalModal","setItem","stringify","checker","acquireTarget","doomedItem","blockCert","blocker_id","blocker_name","blockee_id","blockee_name","blocker_mail","blockee_mail","blocker_dispName","blockee_dispName","endangeredItem","acquireExile","csk","currentChatId","currentUser","userid","mail","chatspecialkey","checker2","chat","blocked","id","recptdispPic","recpt_id","recpt_name","recptdispName","recpt_mail","sndrs_id","sndrs_name","sndrs_mail","sndrsdispName","StartChatModal","contactlist","selectUser","recptId","setRecptId","recptName","setRecptName","recptMail","setRecptMail","dispName","setdispName","dispPic","setdispPic","selectedUser","setSelectedUser","reciepient","email","prevSelectedUser","removeItem","secureContactDeets","show","switchOff","style","zIndex","contact","user_id","SignupButton","screen_hint","Login","ProtectedRoute","component","args","App","setContactlist","gotId","setGotId","setChatId","setChats","setMessages","setLoggedInUser","picutue","setCurrentChat","recpt","recptid","get","res","users","data","currUser","find","myself","currChat","status","pusher","Pusher","cluster","messageChannel","subscribe","chatChannel","bind","newMessage","newChat","unbind_all","unsubscribe","exact","path","Chat","options","newChatId","blockee","blockeeid","enemy","contacts","filter","enemy_ids","reduce","arr","elem","concat","i","enemy_id","friends","length","rawId","replace","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Auth0ProviderWithHistory","children","audience","process","REACT_APP_AUTH0_AUDIENCE","history","useHistory","domain","clientId","redirectUri","onRedirectCallback","appState","push","pathname","ReactDOM","render","document","getElementById"],"mappings":"+WAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,KAAM,0B,cCYKC,EAZK,WAClB,IAAQC,EAAsBC,cAAtBD,kBACR,OACE,wBACEE,UAAU,4BACVC,QAAS,kBAAMH,KAFjB,qBCaWI,EAhBM,WACnB,IAAQC,EAAWJ,cAAXI,OACR,OACE,wBACEH,UAAU,2BACVC,QAAS,kBACPE,EAAO,CACLC,SAAUC,OAAOC,SAASC,UAJhC,sBCOWC,EANc,WAG3B,OAF4BT,cAApBU,gBAEiB,cAAC,EAAD,IAAmB,cAAC,EAAD,KCD/BC,EANC,kBACd,qBAAKV,UAAU,qBAAf,SACE,cAAC,EAAD,OCKWW,EANC,kBACd,qBAAKX,UAAU,UAAf,SACE,qBAAKY,IAJP,mEAIwBC,IAAI,kBCiMfC,eA3LF,SAACC,GACV,MAA6ChB,cAArCiB,EAAR,EAAQA,KACAC,GADR,EAAcR,gBAAd,EAA+BS,UACZH,EAAXE,QACAE,EAAgBJ,EAAhBI,YACR,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACQC,EAAaZ,EAAbY,SACRC,QAAQC,IAAIb,GACZY,QAAQC,IAAIF,GACZ,MAA0BP,mBAAS,IAAnC,mBAAOU,EAAP,KAAcC,EAAd,KACA,EAAoCX,mBAAS,IAA7C,mBAAmBY,GAAnB,WACA,EAAkCZ,qBAAlC,mBAAQa,EAAR,KAAkBC,EAAlB,KAIAC,qBAAU,WACNC,IAEA,IAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,gBAChDb,QAAQC,IAAIQ,EAAQK,SACpBV,EAAaK,GACbM,MACD,IAGHR,qBAAU,WACNQ,MACD,CAACxB,EAAaE,EAAYE,EAASE,IAGtC,IAAMW,EAAS,gBACIQ,IAAX3B,GACAW,QAAQC,IAAII,GACZL,QAAQC,IAAI,6DAEZK,GAAY,GACZN,QAAQC,IAAI,gCAIdc,EAAQ,WAEV,GADAf,QAAQC,IAAIZ,QACO2B,IAAhBzB,GAA6C,OAAhBA,EAC5BG,EAAc,IACdE,EAAW,QACXE,EAAe,gBAEf,CACA,IAAQgB,EAA8BvB,EAA9BuB,QAASG,EAAqB1B,EAArB0B,KAAMC,EAAe3B,EAAf2B,WACvBxB,EAAcoB,GACdlB,EAAWqB,GACXnB,EAAeoB,KAuCvB,OAAQ7B,EA4CI,sBAAKjB,UAAU,OAAf,UAEI,sBAAKA,UAAU,eAAf,UACI,cAAC+C,EAAA,EAAD,CAAQnC,IAAKS,IAEb,sBAAKrB,UAAU,mBAAf,UACI,6BAAKuB,IACL,8BAAG,6CAAqBE,EAAxB,aAGJ,sBAAKzB,UAAU,oBAAf,UACI,cAACgD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,MAEJ,cAACD,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,MAEJ,cAAC,EAAD,UAMR,qBAAKlD,UAAU,aAAf,SACK2B,EAASwB,KAAI,SAACC,GAAD,OACV,qBAAKpD,UAAU,qBAAf,SACI,oBAAGA,UAAS,wBAAmBgB,EAAK6B,OAASO,EAAQC,cAAgB,kBAArE,UACI,sBAAMrD,UAAU,aAAhB,SAA8BoD,EAAQP,OACjCO,EAAQA,QACb,sBAAMpD,UAAU,kBAAhB,SACMoD,EAAQE,gBALmBF,EAAQG,UAazD,sBAAKvD,UAAU,eAAf,UACI,cAAC,IAAD,IACA,iCACI,uBAAOwD,MAAO1B,EAAO2B,SAAU,SAAAC,GAAC,OAChC3B,EAAS2B,EAAEC,OAAOH,QAAQI,YAAY,iBAAiBC,KAAK,SAC5D,wBAAQ5D,QAzHZ,SAACyD,GACjBA,EAAEI,iBACF,IAAMC,EAASvB,aAAaC,QAAQ,UAC9BuB,EAAYxB,aAAaC,QAAQ,kBACjCwB,EAAU3B,KAAKC,MAAMC,aAAaC,QAAQ,gBAChDb,QAAQC,IAAIoC,GACZrC,QAAQC,IAAIoC,EAAQC,aACpBtC,QAAQC,IAAIkC,GACG,OAAXA,GAA8B,KAAXA,EACnBrE,EAAMyE,KAAK,gBAAiB,CACxBJ,OAAQA,EACRX,QAAStB,EACTe,KAAK7B,EAAK6B,KACVuB,SAASpD,EAAKqD,IACdC,cAActD,EAAKuD,SACnBlB,aAAaY,EAAQpB,KACrB2B,aAAcP,EAAQQ,IACtBC,iBAAiBT,EAAQC,YACzBS,eAAgBX,IAEjBY,MAAM,SAAAC,GACL9C,EAAS,OAEZ+C,OAAM,SAAAC,GAAG,OAAInD,QAAQC,IAAIkD,MAG1BC,MAAM,+EA+FwCnB,KAAK,SAAnC,SAA4C,cAAC,IAAD,eAtFxD,sBAAK7D,UAAU,OAAf,UAEI,sBAAKA,UAAU,eAAf,UACI,cAAC+C,EAAA,EAAD,IAEA,sBAAK/C,UAAU,mBAAf,UACI,sCACA,8BAAG,6CAAH,aAGJ,sBAAKA,UAAU,oBAAf,UACI,cAACgD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,MAEJ,cAACD,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,MAEJ,cAAC,EAAD,UAMR,qBAAKlD,UAAU,aAAf,SACI,sFAIJ,sBAAKA,UAAU,eAAf,UACI,cAAC,IAAD,IACA,iCACI,uBAAOwD,MAAO1B,EAAO2B,SAAU,SAAAC,GAAC,OAChC3B,EAAS2B,EAAEC,OAAOH,QAAQI,YAAY,iBAAiBC,KAAK,SAC5D,wBAAQ5D,QAAS,WACb+E,MAAM,6DAEJnB,KAAK,SAHX,SAGoB,cAAC,IAAD,iBA2DA,CAC5CoB,cAAe,kBAAM,cAAC,EAAD,O,qGC6EVC,MAxQf,YAAuH,IAApGC,EAAmG,EAAnGA,QAASC,EAA0F,EAA1FA,MAAOC,EAAmF,EAAnFA,UAAWC,EAAwE,EAAxEA,WAAYC,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,eAAoCC,GAAa,EAAjCC,mBAAiC,EAAbD,WAErG,EAA4BrE,mBAAS,IAArC,mBAAO2C,EAAP,KAAe4B,EAAf,KACA,EAAsCvE,mBAAS,IAA/C,mBAAQwE,EAAR,KAAoBC,EAApB,KACA,EAA0CzE,mBAAS,IAAnD,mBAAQ0E,EAAR,KAAsBC,EAAtB,KACA,EAA0C3E,mBAAS,IAAnD,mBAAQ4E,EAAR,KAAsBC,EAAtB,KACA,EAA0C7E,mBAAS,IAAnD,mBAAQ8E,EAAR,KAAsBC,EAAtB,KACA,EAAkC/E,qBAAlC,mBAAQa,EAAR,KAAkBC,EAAlB,KACA,EAA8Cd,mBAAS,IAAvD,mBAAQuD,EAAR,KAAwByB,EAAxB,KACA,EAA6ChF,mBAAS,IAAtD,mBAAQiF,EAAR,KAAuBC,EAAvB,KAGA,EAAkClF,mBAAS,IAA3C,mBAAOmF,EAAP,KAAkBC,GAAlB,KACA,GAAkCpF,mBAAS,IAA3C,qBAAOqF,GAAP,MAAkBC,GAAlB,MACA,GAAsCtF,mBAAS,IAA/C,qBAAOuF,GAAP,MAAoBC,GAApB,MACA,GAAsCxF,mBAAS,IAA/C,qBAAOyF,GAAP,MAAoBC,GAApB,MACA,GAAsC1F,mBAAS,IAA/C,qBAAO2F,GAAP,MAAoBC,GAApB,MACA,GAAsC5F,mBAAS,IAA/C,qBAAO6F,GAAP,MAAoBC,GAApB,MACA,GAAkD9F,mBAAS,IAA3D,qBAAO+F,GAAP,MAA0BC,GAA1B,MACA,GAA8ChG,mBAAS,IAAvD,qBAAOiG,GAAP,MAAwBC,GAAxB,MACA,GAA8ClG,mBAAS,IAAvD,qBAAOmG,GAAP,MAAwBC,GAAxB,MAGA,GAAsCpG,mBAAS,IAA/C,qBAAQqG,GAAR,MAAoBC,GAApB,MACA,GAA4CtG,oBAAS,GAArD,qBAAQuG,GAAR,MAAuBC,GAAvB,MAGA,GAA0CxG,oBAAS,GAAnD,qBAAQyG,GAAR,MAAsBC,GAAtB,MAGQ9G,GAASjB,cAATiB,KACA0B,GAAY1B,GAAZ0B,QAERd,QAAQC,IAAIb,IAGZmB,qBAAU,WACN4F,OAEF,CAAC1B,IAGH,IA4CM2B,GAAc,WAChB7C,GAAQ,GACRG,KAIJnD,qBAAU,WAhBFiD,IAAU,SAAgBxC,IAAVwC,GAChBlD,GAAY,GACZN,QAAQC,IAAI,4DAEZK,GAAY,GACZN,QAAQC,IAAI,gCAcjB,IAKHM,qBAAU,YACe,IAAlBwF,KACC/F,QAAQC,IAAI4F,IA5DE,WAClB7F,QAAQC,IAAI4F,IAEWjF,aAAayF,QAAQ,cAAe3F,KAAK4F,UAAUT,KAA1E,IACMU,EAAU3F,aAAaC,QAAQ,eACrCb,QAAQC,IAAIsG,GACZvG,QAAQC,IAAI,kDACZ4D,IACAmC,IAAiB,GAqDbQ,MAGL,CAACT,KAIJxF,qBAAU,WACN,IAAoB,IAAjB0F,GAAsB,CACrB,IAAMQ,EAAa/F,KAAKC,MAAMC,aAAaC,QAAQ,kBACnDb,QAAQC,IAAIwG,GA1DC,SAAC3E,GAElB,IAAM4E,EAAY,CACdC,WAAYhC,EACZiC,aAAc7B,GACd8B,WAAYhC,GACZiC,aAAc7B,GACd8B,aAAc5B,GACd6B,aAAc3B,GACd4B,iBAAkBxB,GAClByB,iBAAkBvB,GAClB5C,eAAewC,IAEnBvF,QAAQC,IAAIyG,GACZ,IAAMS,EAAiBvG,aAAayF,QAAQ,gBAAiB3F,KAAK4F,UAAUI,IAC5E1G,QAAQC,IAAIkH,GACZxD,IA2CIyD,MAGL,CAACnB,KAKJ,IAAME,GAAgB,WAClBnG,QAAQC,IAAIuD,GAEO5C,aAAayF,QAAQ,SAAU3F,KAAK4F,UAAUnE,IAAjE,IACMkF,EAAMzG,aAAayF,QAAQ,iBAAkB3F,KAAK4F,UAAUvD,IAC5DuE,EAAgB1G,aAAaC,QAAQ,UAC3Cb,QAAQC,IAAIqH,GACZ,IAAMC,EAAc,CAChBC,OAAQxD,EACR/C,KAAMiD,EACN5B,YAAa8B,EACbqD,KAAMnD,EACNoD,eAAgBL,EAChBvG,QAAS2D,GAIP8B,GADU3F,aAAayF,QAAQ,cAAe3F,KAAK4F,UAAUiB,IACnD3G,aAAaC,QAAQ,WAC/B8G,EAAW/G,aAAaC,QAAQ,iBACtCb,QAAQC,IAAIsH,GACZvH,QAAQC,IAAR,kBAAuBsG,EAAvB,yBAA+CoB,IAE/C/D,IACAH,KASJ,OAAQpD,EAiCJ,sBAAKjC,UAAU,UAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,cAAC+C,EAAA,EAAD,CAAQnC,IAAK8B,KACb,sBAAK1C,UAAU,uBAAf,UACI,cAACgD,EAAA,EAAD,UACI,cAAC,IAAD,CAAU/C,QAAS,kBAAM+H,UAE7B,cAAChF,EAAA,EAAD,UACI,cAAC,IAAD,YAOZ,qBAAKhD,UAAU,kBAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,cAACgD,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,uBAAOY,YAAY,uBAAuBC,KAAK,cAKvD,qBAAK7D,UAAU,iBAAf,SACCoF,EAAMjC,KAAI,SAACqG,GAAD,OACP,sBAAKxJ,UAAS,uBAAkC,IAAjBwJ,EAAKC,SAAoB,wBAA2CjG,MAAOO,EAAQ2F,GAAIF,EAAKjG,IAA3H,UAEI,qBAAKvD,UAAU,oBAAf,SACI,cAAC+C,EAAA,EAAD,CAAQnC,IAAG,UAAK4I,EAAKG,kBAGzB,sBAAK3J,UAAU,oBAAoBC,QAAU,SAACyD,GAC9CiC,EAAU6D,EAAKjG,KACfsC,EAAc2D,EAAKI,UACnB7D,EAAgByD,EAAKK,YACrB5D,EAAgBuD,EAAKM,eACrB3D,EAAgBqD,EAAKO,YACrB3D,EAAkBoD,EAAKxF,YACvBsC,EAAkBkD,EAAKG,eAPvB,UASI,6BAAKH,EAAKM,gBACV,4BAAIN,EAAKO,gBAGb,sBAAK/J,UAAU,qBAAf,UACQ,sBAAMwD,MAAOiE,GAAYiC,GAAIF,EAAKxF,WAAYhE,UAAU,cAAxD,SAAuE,cAAC,IAAD,CAAYC,QAAS,SAACyD,GACzF9B,QAAQC,IAAI2H,EAAKxF,YACjB0D,GAAc8B,EAAKxF,YACnB4D,IAAiB,QAGrB,uBAAM8B,GAAIF,EAAKjG,IAAKvD,UAAU,cAA9B,cAA6C,cAAC,IAAD,CAAWC,QAAS,SAACyD,GAC9D9B,QAAQC,IAAR,kDAAuD2H,EAAKI,WAE5DpD,GAAagD,EAAKQ,UAClBtD,GAAa8C,EAAKI,UAClBhD,GAAe4C,EAAKS,YACpBnD,GAAe0C,EAAKK,YACpB7C,GAAewC,EAAKU,YACpBhD,GAAesC,EAAKO,YACpBzC,GAAmBkC,EAAKW,eACxB3C,GAAmBgC,EAAKM,eACxB1C,GAAqBoC,EAAKxF,YAC1B8D,IAAgB,MAZpB,YA1B4E0B,EAAKjG,aA3DrG,sBAAKvD,UAAU,UAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,cAAC+C,EAAA,EAAD,CAAQnC,IAAK8B,KACb,sBAAK1C,UAAU,uBAAf,UACI,cAACgD,EAAA,EAAD,UACI,cAAC,IAAD,CAAU/C,QAAS,kBAAM+H,UAE7B,cAAChF,EAAA,EAAD,UACI,cAAC,IAAD,YAOZ,qBAAKhD,UAAU,kBAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,cAACgD,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,uBAAOY,YAAY,uBAAuBC,KAAK,cAKvD,qBAAK7D,UAAU,oCAAf,SACI,oBAAIA,UAAU,iBAAd,0ECnGDoK,G,OAzFQ,SAACrJ,GACpB,IACIqE,EAGArE,EAHAqE,MACAiF,EAEAtJ,EAFAsJ,YACAC,EACAvJ,EADAuJ,WAGItJ,EAASjB,cAATiB,KAGR,EAAgCI,mBAAS,IAAzC,mBAAQmJ,EAAR,KAAiBC,EAAjB,KACA,EAAoCpJ,mBAAS,IAA7C,mBAAQqJ,EAAR,KAAmBC,EAAnB,KACA,EAAoCtJ,mBAAS,IAA7C,mBAAQuJ,EAAR,KAAmBC,EAAnB,KACA,EAAkCxJ,mBAAS,IAA3C,mBAAQyJ,EAAR,KAAkBC,EAAlB,KACA,EAAgC1J,mBAAS,IAAzC,mBAAQ2J,EAAR,KAAiBC,EAAjB,KAGA,EAA0C5J,mBAAS,IAAnD,mBAAQ6J,EAAR,KAAsBC,EAAtB,KA2CA,OATA/I,qBAAU,iBAEQS,IAAVwC,GAAmC,KAAZmF,GAAgC,KAAdE,GAAkC,KAAdE,GAAiC,KAAbE,IA9B9D,WACvBjJ,QAAQC,IAAI,yBACZ,IAAMsJ,EAAa,CACf,SAAaZ,EACb,WAAeE,EACf,SAAazJ,EAAKqD,IAClB,WAAerD,EAAK6B,KACpB,WAAe8H,EACf,WAAe3J,EAAKoK,MACpB,cAAkBP,EAClB,aAAiBE,EACjB,cAAgB/J,EAAKuD,SACrB,aAAevD,EAAK0B,QACpB,UAAY,cACZ,WAAe,GACf,WAAe,GAEnBd,QAAQC,IAAIsJ,GACZD,EAAgBC,GAChBvJ,QAAQC,IAAIoJ,GACZ,IAAMI,EAAmB7I,aAAaC,QAAQ,gBAC9Cb,QAAQC,IAAR,2CAAgDwJ,IAChD7I,aAAa8I,WAAW,gBACxB9I,aAAayF,QAAQ,eAAgB3F,KAAK4F,UAAUiD,IACpDb,IAOIiB,KAGN,CAAChB,EAASE,EAAWE,EAAWE,IAG3B9J,EAAMyK,KAEL,qBAAKxL,UAAU,iBAAiBC,QAAU,WA3C9Cc,EAAM0K,aA2CF,SACI,qBAAKzL,UAAU,eAAf,SACI,qBAAKA,UAAU,cAAc0L,MAAO,CAACC,OAAO,GAA5C,SACMtB,EAAYlH,KAAI,SAACyI,GAAD,OACd,sBAAK5L,UAAU,eAAuCC,QAAS,WACvDuK,EAAW,GAAD,OAAIoB,EAAQC,UACtBjB,EAAa,GAAD,OAAIgB,EAAQR,QACxBV,EAAa,GAAD,OAAIkB,EAAQ/I,OACxBiI,EAAY,GAAD,OAAIc,EAAQrH,WACvByG,EAAW,GAAD,OAAIY,EAAQlJ,WAL9B,UAOI,cAACK,EAAA,EAAD,CAAQnC,IAAG,UAAKgL,EAAQlJ,WACxB,qCACMkJ,EAAQ/I,UATkB+I,EAAQC,kBAmBhE,OCxEOC,EAhBM,WACnB,IAAQhM,EAAsBC,cAAtBD,kBACR,OACE,wBACEE,UAAU,4BACVC,QAAS,kBACPH,EAAkB,CAChBiM,YAAa,YAJnB,sB,cCkBWC,MAlBf,WACI,OACI,qBAAKhM,UAAU,cAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,6DAEJ,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,EAAD,Y,gCCHLiM,EATQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAcC,EAAjB,oCACrB,cAAC,IAAD,aACED,UAAWpL,YAA2BoL,EAAW,CAC/CjH,cAAe,kBAAM,cAAC,EAAD,QAEnBkH,KCuTOC,MArTf,WACE,MAA6CrM,cAArCiB,EAAR,EAAQA,KAAMP,EAAd,EAAcA,gBACd,GADA,EAA+BS,UACLE,sBAA1B,mBAAQoK,EAAR,KAAcrG,EAAd,KACA,EAAsC/D,mBAAS,IAA/C,mBAAOiJ,EAAP,KAAoBgC,EAApB,KACA,EAA4BjL,oBAAS,GAArC,mBAAQkL,EAAR,KAAeC,EAAf,KACA,EAA4BnL,mBAAS,IAArC,mBAAOH,EAAP,KAAeuL,EAAf,KACA,EAA4BpL,mBAAS,IAArC,mBAAQgE,EAAR,KAAeqH,EAAf,KACA,EAAkCrL,mBAAS,IAA3C,mBAAQO,EAAR,KAAkB+K,EAAlB,KAEA,EAA0CtL,mBAAS,IAAnD,mBAAsBuL,GAAtB,WACA,EAAsCvL,mBAAS,IAA/C,mBACA,GADA,UACwCA,mBAAS,CAC/CyB,KAAK,OAAQ+J,QAAQ,GAAI9J,WAAW,WADtC,mBAAQ3B,EAAR,KAAqB0L,EAArB,KAIA1K,qBAAU,WACRP,QAAQC,IAAIb,GACZ6L,EAAe,CAAC,CAACnK,QAAQ,GAAIG,KAAK,GAAIC,WAAW,WACrCF,IAAT5B,GAAsBA,IAAS,GAChC2L,EAAgB3L,IAGlB6L,EAAe,CAAC,CAACnK,QAAQ,GAAIG,KAAK,GAAIC,WAAW,MAC/CN,aAAayF,QAAQ,OAAQ3F,KAAK4F,UAAUlH,IAC5CY,QAAQC,IAAIb,GACZ0E,OAGD,CAAC3F,IAAUiB,IAGd,IAYMwE,EAAiB,WACrB,IAAMsH,EAAQxK,KAAKC,MAAMC,aAAaC,QAAQ,gBACxCsB,EAASvB,aAAaC,QAAQ,UACpCb,QAAQC,IAAIkC,GACZyI,EAAUzI,GACVnC,QAAQC,IAAIiL,GACZ,IAAMC,EAAUD,EAAM1D,OACtBxH,QAAQC,IAAIkL,GACZrN,EAAMsN,IAAI,kBACTpI,MAAK,SAAAqI,GACJrL,QAAQC,IAAIoL,GACZ,IAAMC,EAAQD,EAAIE,KAClBvL,QAAQC,IAAIqL,GACZ,IAAIE,EACJA,EAAWF,EAAMG,MAAK,SAAArM,GACpB,OAAOA,EAAK6K,UAAYkB,KAE1BnL,QAAQC,IAAIuL,GACZP,EAAeO,GACfxL,QAAQC,IAAIV,GACZqB,aAAayF,QAAQ,cAAe3F,KAAK4F,UAAUkF,OAClDtI,OAAM,SAAAC,GAAG,OAAInD,QAAQC,IAAIkD,OAO9B5C,qBAAU,WACRP,QAAQC,IAAIV,KACX,CAACA,IAIJ,IAqBMuE,EAAqB,WACzB,IAAM4H,EAAStM,EACfY,QAAQC,IAAIyL,GACZ,IAAM5D,EAAK4D,EAAOjJ,IAClBzC,QAAQC,IAAI6H,GACZhK,EAAMsN,IAAN,yBAA4BtD,IAC3B9E,MAAK,SAAAqI,GACJrL,QAAQC,IAAIoL,EAAIE,MAChBV,EAASQ,EAAIE,MACb,IAAMI,EAAWN,EAAIE,KAAK,GAC1BvL,QAAQC,IAAI0L,GACZ/K,aAAayF,QAAQ,cAAe3F,KAAK4F,UAAUqF,OAClDzI,OAAM,SAAAC,GAAG,OAAInD,QAAQC,IAAR,mCAAwCkD,QA4BpDM,EAAY,WAChB,IAAMqE,EAAKlH,aAAaC,QAAQ,UAC1BwG,EAAMzG,aAAaC,QAAQ,kBACjCb,QAAQC,IAAI6H,GACZ9H,QAAQC,IAAIoH,GACA,OAARA,GAAgBA,IAAQ,IAAc,KAARA,EAChCvJ,EAAMsN,IAAN,6BAAgC/D,IAC/BrE,MAAK,SAAAC,GACJ,GAAuB,MAApBA,EAAS2I,OAAgB,CAC1B5L,QAAQC,IAAIgD,GACZ,IAAMsI,EAAOtI,EAASsI,KACtBvL,QAAQC,IAAIsL,GACZT,EAAYS,GACZX,EAAU9C,GACV9H,QAAQC,IAAIF,QAEZC,QAAQC,IAAI,0GAEfiD,QAGDlD,QAAQC,IAAI,4BA2HhB,OAhCAM,qBAAU,WACR,IAAMsL,EAAS,IAAIC,IAAO,uBAAwB,CAChDC,QAAS,QAGLC,EAAiBH,EAAOI,UAAU,YAClCC,EAAcL,EAAOI,UAAU,SAWrC,OATAD,EAAeG,KAAK,YAAY,SAASC,GACvCtB,EAAY,GAAD,mBAAK/K,GAAL,CAAeqM,KAC1BpM,QAAQC,IAAImM,MAEdF,EAAYC,KAAK,YAAY,SAASE,GACpCxB,EAAS,GAAD,mBAAKrH,GAAL,CAAY6I,KACpBrM,QAAQC,IAAIoM,GACZ5I,OAEK,WACLuI,EAAeM,aACfN,EAAeO,cACfL,EAAYI,aACZJ,EAAYK,iBAGd,CAACxM,EAAUyD,IAEbxD,QAAQC,IAAIF,GACZC,QAAQC,IAAIuD,GAKL3E,EAGL,qBAAKT,UAAU,MAAf,SAEE,qBAAKA,UAAU,YAAf,SAEM,cAAC,IAAD,UAEE,eAAC,EAAD,CAAgBoO,OAAK,EAACC,KAAK,IAAInC,UAAWoC,EAA1C,UAEE,cAAC,EAAD,CAAgBjE,YAAaA,EAAamB,KAAMA,EAAMrG,QAASA,EAASsG,UAlLpE,WAChBtG,EAAQ,OAiLkGmF,WAjFzF,WACjB,IAAMiE,EAAUjM,KAAKC,MAAMC,aAAaC,QAAQ,iBAC7C8L,GACD3M,QAAQC,IAAI0M,GACZ7O,EAAMyE,KAAN,aAAyB,CACjBoK,YAEN3J,MAAK,SAAAC,GACLjD,QAAQC,IAAIgD,EAASsI,MACrB3K,aAAa8I,WAAW,gBACxB,IAAMkD,EAAY3J,EAASsI,KAAK5J,IACZsB,EAASsI,KAAKrD,cAClClI,QAAQC,IAAI2M,MAEb1J,OAAM,SAAAC,GAAG,OAAInD,QAAQC,IAAIkD,OAExBC,MAAM,2BAkEE,cAAC,EAAD,CAASjB,OAAQ9C,EAAQuL,UAAWA,EAAWhH,eAAgBA,EAAiBE,mBAAoBA,EAAqBH,UA9KrH,WAChB,IAAMgJ,EAAUjM,KAAKC,MAAMC,aAAaC,QAAQ,kBAChDb,QAAQC,IAAI0M,GACZ7O,EAAMyE,KAAK,mBAAoB,CAC7BoK,YACC3J,MAAK,SAACqI,GACPrL,QAAQC,IAAIoL,GACZ,IAAMwB,EAAUxB,EAAIE,KACduB,EAAYD,EAAQ/E,GACpB7C,EAAc4H,EAAQ5L,KAC5BjB,QAAQC,IAAR,8CAAmD6M,EAAnD,8BAAkF7H,IAClF7B,MAAM,cAEPF,OAAM,SAAAC,GAAG,OAAInD,QAAQC,IAAI,4BAiKiIuD,MAAOA,EAAOpE,KAAMA,EAAMwK,KAAMA,EAAMrG,QAASA,EAASG,WAjIlM,WACjB,IAAMtE,EAAOsB,KAAKC,MAAMC,aAAaC,QAAQ,SAC7Cb,QAAQC,IAAIb,GACZ,IAAQqD,EAAQrD,EAARqD,IACRzC,QAAQC,IAAIwC,GACZ,IAAMqF,EAAKrF,EACX3E,EAAMsN,IAAN,wBAA2BtD,IAC1B9E,MAAK,SAAAC,GACJ,IAAM8J,EAAQ9J,EAASsI,KAEvB,GADAvL,QAAQC,IAAI8M,GACRA,IAAU,GACZjP,EAAMsN,IAAI,kBACTpI,MAAK,SAAAqI,GACJ,IAAM2B,EAAW3B,EAAIE,KACf9C,EAAcuE,EAASC,QAAO,SAAAjD,GAAO,OACzCA,EAAQC,UAAYxH,KAEtBzC,QAAQC,IAAI+M,GACZvC,EAAehC,UAEd,CACH,IAAMyE,EAAYH,EAAMI,QACtB,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAAOD,EAAK1G,cAAY,IAE5C3G,QAAQC,IAAIiN,GACZpP,EAAMsN,IAAI,kBACTpI,MAAK,SAAAqI,GACJrL,QAAQC,IAAIiN,GACZ,IAAMF,EAAW3B,EAAIE,KACrBvL,QAAQC,IAAI+M,GACZ,IAJW,eAIHO,GACJ,IAAMC,EAAWN,EAAUK,GACrBE,EAAUT,EAASC,QAAO,SAAAjD,GAAO,OACrCA,EAAQC,UAAYuD,GAAYxD,EAAQC,UAAYxH,KAEtDzC,QAAQC,IAAIwN,GACZhD,EAAegD,IANXF,EAAI,EAAGA,EAAIL,EAAUQ,OAAQH,IAAK,EAAlCA,WAmG6N9J,UAAWA,EAAWgF,YAAaA,EAAa5E,UA5D3Q,WAChB,IAAM8J,EAAQ/M,aAAaC,QAAQ,eACnCb,QAAQC,IAAI0N,GACZ,IAAM7F,EAAK6F,EAAMC,QAAQ,WAAY,MACrC9P,EAAM+P,OAAN,oBAA0B/F,IACzB9E,MAAK,SAAAqI,GACJrL,QAAQC,IAAIoL,GACZjI,MAAMiI,EAAIE,MACVzH,QAoD+S4G,MAAOA,EAAOC,SAAUA,IAC7T,cAAC,EAAD,CAAMtL,OAAQA,EAAQuL,UAAWA,EAAWhH,eAAgBA,EAAgBrE,YAAaA,EAAaQ,SAAUA,EAAUX,KAAMA,EAAMoE,MAAOA,EAAOsH,YAAaA,aAW3K,cAAC,EAAD,KClTSgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhL,MAAK,YAAkD,IAA/CiL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCqBCO,EAxBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAG5BC,EAAWC,gSAAYC,yBAEvBC,EAAUC,cAMhB,OACE,cAAC,IAAD,CACEC,OAZWJ,4BAaXK,SAZaL,mCAabM,YAAatQ,OAAOC,SAASC,OAC7BqQ,mBATuB,SAACC,GAC1BN,EAAQO,MAAa,OAARD,QAAQ,IAARA,OAAA,EAAAA,EAAUzQ,WAAYC,OAAOC,SAASyQ,WASjDX,SAAUA,EALZ,SAOGD,KCfPa,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BzB,K","file":"static/js/main.172a68c0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    base: \"http://localhost:5000\",\r\n});\r\n\r\nexport default instance","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary btn-block\"\r\n      onClick={() => loginWithRedirect()}\r\n    >\r\n      Log In\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger btn-block\"\r\n      onClick={() =>\r\n        logout({\r\n          returnTo: window.location.origin,\r\n        })\r\n      }\r\n    >\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\n\r\nimport LoginButton from \"./login-button\";\r\nimport LogoutButton from \"./logout-button\";\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst AuthenticationButton = () => {\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\r\n};\r\n\r\nexport default AuthenticationButton;","import React from \"react\";\r\nimport AuthenticationButton from \"./authentication-button\";\r\n\r\nconst AuthNav = () => (\r\n  <div className=\"navbar-nav ml-auto\">\r\n    <AuthenticationButton />\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from \"react\";\r\nconst loadingImg =\r\n  \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\r\n\r\nconst Loading = () => (\r\n  <div className=\"spinner\">\r\n    <img src={loadingImg} alt=\"Loading...\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport '../Styles/Chat.css';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, SearchOutlined } from '@material-ui/icons';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport React from 'react';\r\nimport axios from '../axios';\r\nimport AuthNav from './auth-nav';\r\nimport Loading from './Loading';\r\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\r\n\r\nconst Chat = (props) => { \r\n    const { user, isAuthenticated, isLoading } = useAuth0();\r\n    const { chatId } = props;\r\n    const { currentChat } = props;\r\n    const [endPicture, setEndPicture] = useState('');\r\n    const [endName, setEndName] = useState('');\r\n    const [endLastSeen, setEndLastSeen] = useState('')\r\n    const { messages } = props;\r\n    console.log(user);\r\n    console.log(messages);\r\n    const [input, setInput] = useState(\"\");\r\n    const [ currRecpt, setCurrRecpt ] = useState({});\r\n    const [ isChatId, setIsChatId ] = useState();\r\n    \r\n\r\n    \r\n    useEffect(() =>{\r\n        unlock()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        const current = JSON.parse(localStorage.getItem('currentUser'));\r\n        console.log(current.picture);\r\n        setCurrRecpt(current);\r\n        setup();\r\n    }, []);\r\n\r\n\r\n    useEffect(() =>{\r\n        setup();\r\n    }, [currentChat, endPicture, endName, endLastSeen]);\r\n\r\n\r\n    const unlock = () =>{\r\n        if( chatId === undefined ){\r\n            console.log(isChatId);\r\n            console.log('ChatPage Unlock Failed...No chats exist in this account')\r\n        }else{\r\n            setIsChatId(true);\r\n            console.log('ChatPage Unlock Successful')\r\n        }\r\n    }\r\n\r\n    const setup = () =>{\r\n        console.log(chatId);\r\n        if(currentChat === undefined || currentChat === null){\r\n            setEndPicture('')\r\n            setEndName('Name')\r\n            setEndLastSeen('Recently')\r\n        }\r\n        else{           \r\n            const { picture, name, last_login } = currentChat;\r\n            setEndPicture(picture)\r\n            setEndName(name)\r\n            setEndLastSeen(last_login)\r\n        }\r\n    }\r\n\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault(); \r\n        const chatid = localStorage.getItem('chatid');\r\n        const specialkey= localStorage.getItem('chatSpecialKey');\r\n        const details = JSON.parse(localStorage.getItem('currentUser'));\r\n        console.log(details);\r\n        console.log(details.displayname);\r\n        console.log(chatid);\r\n        if (chatid !== null || chatid !== ''){\r\n            axios.post('/api/messages', {\r\n                chatid: chatid,            \r\n                message: input,\r\n                name:user.name,\r\n                senderid:user.sub,\r\n                sndrsdispname:user.nickname,\r\n                receivername:details.name,\r\n                receiverspic: details.pic,\r\n                receiverdispname:details.displayname,\r\n                chatSpecialKey: specialkey\r\n                \r\n            }).then( response =>{\r\n                setInput(\"\");\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        } else{\r\n            alert(\"Please select an existing chat or start a new one before sending a message\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return !chatId ? (\r\n                <div className=\"chat\">\r\n\r\n                    <div className=\"chat__header\">\r\n                        <Avatar />\r\n\r\n                        <div className=\"chat__headerInfo\">\r\n                            <h3>Name</h3>\r\n                            <p><h5>Last Seen: </h5>....</p>\r\n                        </div>\r\n\r\n                        <div className=\"chat__headerRight\">\r\n                            <IconButton>\r\n                                <SearchOutlined />\r\n                            </IconButton>\r\n                            <IconButton>\r\n                                <AttachFile />                      \r\n                            </IconButton>\r\n                            <AuthNav />\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n\r\n                    <div className=\"chat__body\">\r\n                        <h4>Select an existing conversation or start A New One</h4>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"chat__footer\">\r\n                        <InsertEmoticonIcon />\r\n                        <form>\r\n                            <input value={input} onChange={e => \r\n                            setInput(e.target.value)} placeholder=\"type a message\" type=\"text\" />\r\n                            <button onClick={()=> {                                \r\n                                alert('You need to select a chat first before sending a message')\r\n                                }\r\n                                } type=\"submit\"><SendIcon/></button>\r\n                        </form>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n    ):(\r\n                <div className=\"chat\">\r\n\r\n                    <div className=\"chat__header\">\r\n                        <Avatar src={endPicture} />\r\n\r\n                        <div className=\"chat__headerInfo\">\r\n                            <h3>{endName}</h3>\r\n                            <p><h5>Last Seen: </h5>{endLastSeen}....</p>\r\n                        </div>\r\n\r\n                        <div className=\"chat__headerRight\">\r\n                            <IconButton>\r\n                                <SearchOutlined />\r\n                            </IconButton>\r\n                            <IconButton>\r\n                                <AttachFile />                      \r\n                            </IconButton>\r\n                            <AuthNav />\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n\r\n                    <div className=\"chat__body\">\r\n                        {messages.map((message) => (\r\n                            <div className=\"message__container\" key={message._id}>\r\n                                <p className={`chat__message ${user.name !== message.receivername && 'sender__myself'}`}>\r\n                                    <span className=\"chat__name\">{message.name}</span>\r\n                                        {message.message}\r\n                                    <span className=\"chat__timestamp\">\r\n                                        { message.timestamp }\r\n                                    </span>\r\n                                </p>                        \r\n                            </div>\r\n                        ))}                        \r\n                    </div>\r\n\r\n\r\n                    <div className=\"chat__footer\">\r\n                        <InsertEmoticonIcon />\r\n                        <form>\r\n                            <input value={input} onChange={e => \r\n                            setInput(e.target.value)} placeholder=\"type a message\" type=\"text\" />\r\n                            <button onClick={sendMessage} type=\"submit\"><SendIcon/></button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withAuthenticationRequired(Chat, {\r\n    onRedirecting: () => <Loading />,\r\n});\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport '../Styles/Sidebar.css';\r\nimport '../Styles/SidebarChat.css'\r\nimport { Avatar,IconButton } from '@material-ui/core';\r\nimport  ChatIcon from '@material-ui/icons/Chat';\r\nimport  SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport  MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\n\r\nfunction Sidebar({ setShow, chats, fetchChat, addNewChat, blockUser, chatRejuvinate, retrieveUsersChats, deleteNow }) {\r\n//declaring state holders for the selectchat function variables\r\n    const [chatid, setChatid] = useState('');\r\n    const [ currUserId, setCurrUserId ] = useState('');\r\n    const [ currUserName, setCurrUserName ] = useState('');\r\n    const [ currUserDisp, setCurrUserDisp ] = useState('');\r\n    const [ currUserMail, setCurrUserMail ] = useState('');\r\n    const [ isChatId, setIsChatId ] = useState();\r\n    const [ chatSpecialKey, setChatSpecialKey ] = useState('');\r\n    const [ currentUserPic,setCurrentUserPic ] = useState('');\r\n\r\n//declaring state holders for the block url trigger function variables\r\n    const [blockerId, setBlockerId] = useState('');\r\n    const [blockeeId, setBlockeeId] = useState('');\r\n    const [blockername, setBlockername] = useState('');\r\n    const [blockeename, setBlockeename] = useState('');\r\n    const [blockermail, setBlockermail] = useState('');\r\n    const [blockeemail, setBlockeemail] = useState('');\r\n    const [blockedSpecialKey, setBlockedSpecialKey] = useState('');\r\n    const [blockerDispName, setBlockerDispName] = useState('');\r\n    const [blockeeDispName, setBlockeeDispName] = useState('');\r\n\r\n//declaring state holders for the delete callback function variables\r\n    const [ selectedId, setSelectedId ] = useState('');\r\n    const [ deleteClicked, setDeleteClicked ] = useState(false)\r\n\r\n//declaring state holders for the block callback function variables\r\n    const [ blockClicked, setBlockClicked ] = useState(false);\r\n    \r\n//destructuring the valid users details from the Auth0 hook and saving to variable \"user\"\r\n    const { user } = useAuth0();\r\n    const { picture } = user;\r\n\r\n    console.log(user);\r\n\r\n//useEffect for selecting a particular chat\r\n    useEffect(()=>{\r\n        secureChatId()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[currentUserPic])\r\n\r\n//function for triggering the url call to delete a chat\r\n    const acquireTarget = () => {\r\n        console.log(selectedId);\r\n        // eslint-disable-next-line no-unused-vars\r\n        const endangeredItem = localStorage.setItem('selectedDel', JSON.stringify(selectedId));\r\n        const checker = localStorage.getItem('selectedDel');\r\n        console.log(checker);\r\n        console.log('delete function run without being called again')\r\n        deleteNow();\r\n        setDeleteClicked(false);\r\n    }\r\n\r\n\r\n//function for triggering the url call to block a user from the sidebar chat elements\r\n    const acquireExile = (e) => {\r\n\r\n        const blockCert = {\r\n            blocker_id: blockerId,\r\n            blocker_name: blockername,\r\n            blockee_id: blockeeId,\r\n            blockee_name: blockeename,\r\n            blocker_mail: blockermail,\r\n            blockee_mail: blockeemail,\r\n            blocker_dispName: blockerDispName,\r\n            blockee_dispName: blockeeDispName,\r\n            chatSpecialKey:blockedSpecialKey\r\n        }\r\n        console.log(blockCert);\r\n        const endangeredItem = localStorage.setItem('selectedBlock', JSON.stringify(blockCert));\r\n        console.log(endangeredItem);\r\n        blockUser()\r\n    }\r\n\r\n//function to unlock the sidebar is user is validated\r\n    const unlock = () =>{\r\n        if( chats === [] || chats === undefined ){\r\n            setIsChatId(false);\r\n            console.log('Sidebar Unlock Failed...No chats exist in this account')\r\n        }else{\r\n            setIsChatId(true);\r\n            console.log('Sidebar Unlock Successful')\r\n        }\r\n    }\r\n\r\n//function to open modal to start a new chat\r\n    const signalModal = () => {\r\n        setShow(true);\r\n        addNewChat()\r\n    }\r\n\r\n//useEffect to trigger unlocking the sidebar if user is validated\r\n    useEffect(() =>{\r\n        unlock()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n\r\n//useEffect to trigger the entire delete sequence when the delete button is clicked\r\n    useEffect(() =>{\r\n        if(deleteClicked === true){\r\n            console.log(selectedId)\r\n            acquireTarget();\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [deleteClicked]);\r\n\r\n\r\n//useEffect to trigger the blockuser sequence when the block button is clicked\r\n    useEffect(() =>{\r\n        if(blockClicked === true){\r\n            const doomedItem = JSON.parse(localStorage.getItem('selectedBlock'));\r\n            console.log(doomedItem);\r\n            acquireExile();\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [blockClicked]);\r\n\r\n\r\n\r\n//secure chatid function which begins the entire add-new-chat sequence and sets up new chats for both user and receiver\r\n    const secureChatId = (() => {\r\n        console.log(chats)\r\n        // eslint-disable-next-line no-unused-vars\r\n        const currChatId = localStorage.setItem('chatid', JSON.stringify(chatid));\r\n        const csk = localStorage.setItem('chatSpecialKey', JSON.stringify(chatSpecialKey));\r\n        const currentChatId = localStorage.getItem('chatid');\r\n        console.log(currentChatId);\r\n        const currentUser = {\r\n            userid: currUserId,\r\n            name: currUserName,\r\n            displayname: currUserDisp,\r\n            mail: currUserMail,\r\n            chatspecialkey: csk,\r\n            picture: currentUserPic\r\n        };\r\n        // eslint-disable-next-line no-unused-vars\r\n        const current = localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n        const checker = localStorage.getItem('chatid');\r\n        const checker2 = localStorage.getItem('chatSecretKey');\r\n        console.log(currentUser);\r\n        console.log(`chatid: ${checker}, specialkey: ${checker2}`);\r\n\r\n        chatRejuvinate()\r\n        fetchChat(); \r\n    })//where sidebar makes the current receiver's details accessible to all other components\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Render Sidebar\r\n    return !isChatId ? (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={picture} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton >\r\n                        <ChatIcon onClick={() => signalModal()} />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                \r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <input placeholder=\"Search conversations\" type=\"text\" />\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"sidebar__chats sidebar__emptyChat\">\r\n                <h3 className=\"empty__message\">Click The New Message Icon To Start a New Conversation</h3>\r\n            </div>\r\n        </div>\r\n\r\n    ) : (\r\n\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={picture} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <ChatIcon onClick={() => signalModal()} />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <input placeholder=\"Search conversations\" type=\"text\" />\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n            {chats.map((chat) => (\r\n                <div className={`sidebarChat ${chat.blocked === true && 'sidebar__blockedChat'}`} key={ chat._id } value={chatid} id={chat._id}>\r\n            \r\n                    <div className=\"sidebarChat__left\">\r\n                        <Avatar src={`${chat.recptdispPic}`}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"sidebarChat__info\" onClick={ (e) => {                \r\n                    setChatid(chat._id)\r\n                    setCurrUserId(chat.recpt_id)\r\n                    setCurrUserName(chat.recpt_name)\r\n                    setCurrUserDisp(chat.recptdispName)\r\n                    setCurrUserMail(chat.recpt_mail)\r\n                    setChatSpecialKey(chat.specialkey)\r\n                    setCurrentUserPic(chat.recptdispPic)\r\n                }}>\r\n                        <h2>{chat.recptdispName}</h2>\r\n                        <p>{chat.recpt_mail}</p>\r\n                    </div>\r\n\r\n                    <div className=\"sidebarChat__right\">\r\n                            <span value={selectedId} id={chat.specialkey} className=\"chat__trash\" ><DeleteIcon onClick={(e) => {\r\n                                console.log(chat.specialkey)\r\n                                setSelectedId(chat.specialkey);\r\n                                setDeleteClicked(true)\r\n                                }}/></span> \r\n\r\n                            <span id={chat._id} className=\"chat__block\"> <BlockIcon onClick={(e) => {\r\n                                console.log(`this is the id of who you just blocked: ${chat.recpt_id}`);\r\n                                //prepping state to fire block function\r\n                                setBlockerId(chat.sndrs_id)\r\n                                setBlockeeId(chat.recpt_id)\r\n                                setBlockername(chat.sndrs_name)\r\n                                setBlockeename(chat.recpt_name)\r\n                                setBlockermail(chat.sndrs_mail)\r\n                                setBlockeemail(chat.recpt_mail)\r\n                                setBlockerDispName(chat.sndrsdispName)\r\n                                setBlockeeDispName(chat.recptdispName)\r\n                                setBlockedSpecialKey(chat.specialkey)\r\n                                setBlockClicked(true)\r\n                                }} /> </span>\r\n                    </div> \r\n                    \r\n                </div>\r\n            ))}   \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport '../Styles/StartChatModal.css';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst StartChatModal = (props) => {\r\n    const {\r\n        chats,\r\n        contactlist,\r\n        selectUser\r\n    } = props;\r\n\r\n    const { user } = useAuth0();\r\n\r\n\r\n    const [ recptId, setRecptId ] = useState('');\r\n    const [ recptName, setRecptName ] = useState('');\r\n    const [ recptMail, setRecptMail ] = useState('');\r\n    const [ dispName, setdispName ] = useState('');\r\n    const [ dispPic, setdispPic ] = useState('');\r\n\r\n    \r\n    const [ selectedUser, setSelectedUser ] = useState({});\r\n    const toggle = () => {\r\n        props.switchOff();\r\n    }\r\n\r\n\r\n    const secureContactDeets = () => {\r\n        console.log(\"starting secure deets\");\r\n        const reciepient = {\r\n            'recpt_id' : recptId,\r\n            'recpt_name' : recptName,\r\n            'sndrs_id' : user.sub,\r\n            'sndrs_name' : user.name,\r\n            'recpt_mail' : recptMail,\r\n            'sndrs_mail' : user.email,\r\n            'recptdispName' : dispName,\r\n            'recptPicture' : dispPic,\r\n            'sndrsdispName':user.nickname,\r\n            'sndrsPicture':user.picture,\r\n            'secretKey':\"'on its way\",\r\n            'last_mesge' : \"\",\r\n            'numofmsges' : 0\r\n        }\r\n        console.log(reciepient);\r\n        setSelectedUser(reciepient);\r\n        console.log(selectedUser);\r\n        const prevSelectedUser = localStorage.getItem('selectedUser')\r\n        console.log(`this is the previous saved user: ${prevSelectedUser}`)\r\n        localStorage.removeItem('selectedUser')\r\n        localStorage.setItem('selectedUser', JSON.stringify(reciepient));\r\n        selectUser()\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        // eslint-disable-next-line no-mixed-operators\r\n        if( chats !== undefined || recptId !== '' && recptName !== '' && recptMail !== '' && dispName !== '' ){\r\n            secureContactDeets();\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[recptId, recptName, recptMail, dispName])\r\n\r\n    \r\n    return props.show ? (\r\n        \r\n            <div className=\"modal__wrapper\" onClick={ () => toggle() }>\r\n                <div className=\"modal__inner\">\r\n                    <div className=\"modal__body\" style={{zIndex:1}}>\r\n                        { contactlist.map((contact) =>  (                        \r\n                            <div className=\"user__select\" key={ contact.user_id } onClick={() => {      \r\n                                    setRecptId(`${contact.user_id}`);\r\n                                    setRecptMail(`${contact.email}`);\r\n                                    setRecptName(`${contact.name}`);\r\n                                    setdispName(`${contact.nickname}`);    \r\n                                    setdispPic(`${contact.picture}`);\r\n                                }}>\r\n                                <Avatar src={`${contact.picture}`} />\r\n                                <span>\r\n                                    ${contact.name}\r\n                                </span>\r\n                            </div>                   \r\n                        )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    ):(\r\n        null\r\n    )\r\n}\r\n\r\nexport default StartChatModal\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst SignupButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary btn-block\"\r\n      onClick={() =>\r\n        loginWithRedirect({\r\n          screen_hint: \"signup\",\r\n        })\r\n      }\r\n    >\r\n      Sign Up\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SignupButton;","import React from 'react';\r\nimport LoginButton from './login-button';\r\nimport SignupButton from './signup-button';\r\nimport '../Styles/LoginButton.css';\r\nimport '../Styles/Login.css'\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login__body\">\r\n            <div className=\"login__inner\">\r\n                <div className=\"login__header\">\r\n                    <h4>Welcome To Opus Messenger</h4>\r\n                </div>\r\n                <div className=\"login__button\">\r\n                    <LoginButton />\r\n                </div>\r\n                <div className=\"signup__button\">\r\n                    <SignupButton />\r\n                </div>       \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport Loading from \"../Components/Loading\";\r\n\r\nconst ProtectedRoute = ({ component, ...args }) => (\r\n  <Route\r\n    component={withAuthenticationRequired(component, {\r\n      onRedirecting: () => <Loading />,\r\n    })}\r\n    {...args}\r\n  />\r\n);\r\n\r\nexport default ProtectedRoute;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport Chat from './Components/Chat';\r\nimport Sidebar from './Components/Sidebar';\r\nimport StartChatModal from './Components/StartChatModal';\r\nimport Login from './Components/Login';\r\nimport Pusher from \"pusher-js\";\r\nimport axios from './axios';\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport ProtectedRoute from './auth/protected-route';\r\n\r\nfunction App() {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  const [ show, setShow ] = useState();\r\n  const [contactlist, setContactlist] = useState([]);\r\n  const [ gotId, setGotId ] = useState(false);\r\n  const [chatId, setChatId] = useState('');\r\n  const [ chats, setChats ] = useState([]);\r\n  const [ messages, setMessages ] = useState([]);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [ loggedInUser, setLoggedInUser ] = useState({});\r\n  const [ myBlockees, setMyBlockees ] = useState([]);\r\n  const [ currentChat, setCurrentChat ] = useState({\r\n    name:'Name', picutue:'', last_login:'today'\r\n  });\r\n\r\n  useEffect(()=>{\r\n    console.log(user)\r\n    setCurrentChat([{picture:'', name:'', last_login:''}]);\r\n    if(user === undefined || user === []){  \r\n      setLoggedInUser(user);\r\n    }else{\r\n      \r\n    setCurrentChat([{picture:'', name:'', last_login:''}]);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      console.log(user);\r\n      retrieveUsersChats();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [useAuth0, user]);\r\n\r\n\r\n  const storageChecker = () => {\r\n    const chatidChecker =  localStorage.getItem('chatid');\r\n    const userChecker = localStorage.getItem('user');\r\n    const messagesChecker = localStorage.getItem('messages');\r\n\r\n    console.log(`Okay so these are your local storage variables-- chatid:${chatidChecker}, user details:${userChecker}, messages:${messagesChecker}`)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const chatRejuvinate = () => {\r\n    const recpt = JSON.parse(localStorage.getItem('currentUser'));\r\n    const chatid = localStorage.getItem('chatid');\r\n    console.log(chatid)\r\n    setChatId(chatid)\r\n    console.log(recpt)\r\n    const recptid = recpt.userid;\r\n    console.log(recptid)\r\n    axios.get('api/users/sync')\r\n    .then(res =>{\r\n      console.log(res)\r\n      const users = res.data;\r\n      console.log(users);\r\n      let currUser = {};\r\n      currUser = users.find(user => {\r\n        return user.user_id === recptid\r\n      })\r\n      console.log(currUser);\r\n      setCurrentChat(currUser);\r\n      console.log(currentChat)\r\n      localStorage.setItem('currentChat', JSON.stringify(currUser))\r\n    }).catch(err => console.log(err))\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log(currentChat)\r\n  }, [currentChat])\r\n\r\n\r\n\r\n  const retrieveUsersMessages = () =>{\r\n    const myself = user\r\n    console.log(myself)\r\n    const id = myself.name;\r\n    console.log(id);\r\n    axios.get(`api/messages/${id}`)\r\n    .then(responses =>{\r\n      const responseData = responses.data\r\n      console.log(responseData);\r\n      const res = responseData.filter((response)=>{\r\n          return { senderid:id }\r\n      })\r\n      console.log(res);\r\n      setMessages(responses.data)\r\n      console.log(messages);\r\n    }).catch(err => console.log(`there was an API Error ${err}`));\r\n  }\r\n\r\n\r\n\r\n\r\n  const retrieveUsersChats = () =>{\r\n    const myself = user\r\n    console.log(myself)\r\n    const id = myself.sub;\r\n    console.log(id);\r\n    axios.get(`api/chats/chat/${id}`)\r\n    .then(res =>{\r\n      console.log(res.data);\r\n      setChats(res.data)\r\n      const currChat = res.data[0];\r\n      console.log(currChat);\r\n      localStorage.setItem('currentChat', JSON.stringify(currChat))\r\n    }).catch(err => console.log(`there was an API Error : ${err}`));\r\n  }\r\n\r\n\r\n\r\n  const switchOff = () => {\r\n    setShow(null);\r\n  }\r\n\r\n\r\n  const blockUser = () => {\r\n    const options = JSON.parse(localStorage.getItem('selectedBlock'));\r\n    console.log(options)\r\n    axios.post('api/users/block/', {\r\n      options\r\n    }).then((res)=>{\r\n      console.log(res)\r\n      const blockee = res.data\r\n      const blockeeid = blockee.id;\r\n      const blockeename = blockee.name;\r\n      console.log(`alright so these are new blockeeid: ${blockeeid} and their name is ${blockeename}`);\r\n      alert(\"Blocked\")\r\n    })\r\n    .catch(err => console.log('Block Attempt Failed'))\r\n  }\r\n\r\n\r\n  \r\n  const fetchChat = () => {\r\n    const id = localStorage.getItem('chatid');\r\n    const csk = localStorage.getItem('chatSpecialKey');\r\n    console.log(id);\r\n    console.log(csk);    \r\n    if( csk !== null || csk !== [] || csk !== ''){\r\n      axios.get(`/api/messages/chat/${csk}`)\r\n      .then(response => {\r\n        if(response.status === 200 ){\r\n          console.log(response);\r\n          const data = response.data\r\n          console.log(data);\r\n          setMessages(data);\r\n          setChatId(id);\r\n          console.log(messages);\r\n        }else{\r\n          console.log('there was a problem retrieving the messages for this chat, trying checking if the user is submitted')\r\n        }\r\n    }).catch()\r\n\r\n    }else{\r\n      console.log('No chat id was detected')\r\n    }    \r\n  }\r\n\r\n\r\n\r\n  const addNewChat = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    console.log(user)\r\n    const { sub } = user;\r\n    console.log(sub);\r\n    const id = sub\r\n    axios.get(`api/users/set/${id}`)\r\n    .then(response=>{\r\n      const enemy = response.data;\r\n      console.log(enemy)\r\n      if( enemy !== [] ){\r\n        axios.get('api/users/sync')\r\n        .then(res => {         \r\n          const contacts = res.data\r\n          const contactlist = contacts.filter(contact =>\r\n            contact.user_id !== sub\r\n          )\r\n          console.log(contacts);\r\n          setContactlist(contactlist);\r\n          })\r\n      }else{\r\n        const enemy_ids = enemy.reduce(\r\n          (arr, elem)=> arr.concat(elem.blocker_id),[]\r\n          );\r\n        console.log(enemy_ids)\r\n        axios.get('api/users/sync')\r\n        .then(res => {\r\n          console.log(enemy_ids);\r\n          const contacts = res.data;\r\n          console.log(contacts)\r\n          for(let i = 0; i < enemy_ids.length; i++){\r\n              const enemy_id = enemy_ids[i];\r\n              const friends = contacts.filter(contact => \r\n                contact.user_id !== enemy_id && contact.user_id !== sub\r\n              ) \r\n              console.log(friends);\r\n              setContactlist(friends);\r\n          } \r\n        }) \r\n      }\r\n      \r\n    \r\n    })\r\n  }\r\n\r\n\r\n\r\n  const selectUser = () =>{\r\n    const options = JSON.parse(localStorage.getItem('selectedUser'));\r\n    if(options){\r\n      console.log(options);\r\n      axios.post(`api/chats/`, {\r\n              options\r\n          }\r\n      ).then(response => {\r\n        console.log(response.data)\r\n        localStorage.removeItem('selectedUser');\r\n        const newChatId = response.data._id;\r\n        const newChatName = response.data.recptdispName;\r\n        console.log(newChatId);\r\n      })\r\n      .catch(err => console.log(err))\r\n      }else{\r\n        alert('Please select a user');\r\n      }\r\n    \r\n  }\r\n\r\n\r\n  const deleteNow = () => {\r\n    const rawId = localStorage.getItem('selectedDel');\r\n    console.log(rawId);\r\n    const id = rawId.replace(/^\"(.*)\"$/, '$1');\r\n    axios.delete(`api/chats/${id}`)\r\n    .then(res => {\r\n      console.log(res)\r\n      alert(res.data)\r\n      retrieveUsersChats()\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() =>{\r\n    const pusher = new Pusher('0d81b56dcdff3b8a813c', {\r\n      cluster: 'mt1'\r\n    });\r\n\r\n    const messageChannel = pusher.subscribe('messages');\r\n    const chatChannel = pusher.subscribe('chats');\r\n\r\n    messageChannel.bind('inserted', function(newMessage) {\r\n      setMessages([...messages, newMessage]);\r\n      console.log(newMessage)      \r\n    });\r\n    chatChannel.bind('inserted', function(newChat) {\r\n      setChats([...chats, newChat]);\r\n      console.log(newChat)\r\n      fetchChat();\r\n    });\r\n    return () => {\r\n      messageChannel.unbind_all();\r\n      messageChannel.unsubscribe();\r\n      chatChannel.unbind_all();\r\n      chatChannel.unsubscribe();\r\n    }\r\n\r\n  },[messages, chats]);\r\n\r\n  console.log(messages);\r\n  console.log(chats);\r\n  \r\n\r\n\r\n\r\n  return isAuthenticated ? (\r\n\r\n    //using the BEM naming convention\r\n    <div className=\"app\">\r\n\r\n      <div className=\"app__body\"> \r\n\r\n            <Switch>\r\n\r\n              <ProtectedRoute exact path=\"/\" component={Chat}>\r\n\r\n                <StartChatModal contactlist={contactlist} show={show} setShow={setShow} switchOff={switchOff} selectUser={selectUser} />\r\n                <Sidebar chatid={chatId} setChatId={setChatId} chatRejuvinate={chatRejuvinate}  retrieveUsersChats={retrieveUsersChats}  blockUser={blockUser} chats={chats} user={user} show={show} setShow={setShow} addNewChat={addNewChat} fetchChat={fetchChat} contactlist={contactlist} deleteNow={deleteNow} gotId={gotId} setGotId={setGotId} />\r\n                <Chat chatId={chatId} setChatId={setChatId} chatRejuvinate={chatRejuvinate} currentChat={currentChat} messages={messages} user={user} chats={chats} setMessages={setMessages} />\r\n                \r\n              </ProtectedRoute>\r\n              \r\n            </Switch>\r\n        \r\n      </div>\r\n\r\n    </div>  \r\n    \r\n  ):(\r\n      <Login />\r\n  )}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({ children }) => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\r\n\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n      audience={audience}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Auth0ProviderWithHistory>\r\n      <App />\r\n    </Auth0ProviderWithHistory>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}